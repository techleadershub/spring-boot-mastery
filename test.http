### Variables
@host = http://localhost:9000
@client_id = client
@client_secret = secret

### 1. OAuth2 Token Endpoints

### Get Access Token (Client Credentials)
POST {{host}}/oauth2/token
Authorization: Basic Y2xpZW50OnNlY3JldA==
Content-Type: application/x-www-form-urlencoded

grant_type=client_credentials&scope=read

### Get Access Token (Password Grant)
POST {{host}}/oauth2/token
Authorization: Basic Y2xpZW50OnNlY3JldA==
Content-Type: application/x-www-form-urlencoded

grant_type=password&username=admin&password=password&scope=read write

### Refresh Token
# Replace {refresh_token} with the actual refresh token received from the token endpoint
POST {{host}}/oauth2/token
Authorization: Basic Y2xpZW50OnNlY3JldA==
Content-Type: application/x-www-form-urlencoded

grant_type=refresh_token&refresh_token={refresh_token}

### 2. Protected API Endpoints

### Public Endpoint (No Auth Required)
GET {{host}}/api/public

### User Endpoint (Requires Authentication)
# Replace {access_token} with the actual access token received from the token endpoint
GET {{host}}/api/user
Authorization: Bearer {access_token}

### Admin Endpoint (Requires ADMIN Role)
# Replace {access_token} with the actual access token received from the token endpoint
GET {{host}}/api/admin
Authorization: Bearer {access_token}

### 3. Error Cases

### Access Protected Endpoint without Token (Should Fail - 401 Unauthorized)
GET {{host}}/api/user

### Access with Invalid Token (Should Fail - 401 Unauthorized)
GET {{host}}/api/user
Authorization: Bearer invalid_token

### Access Admin Endpoint as User (Should Fail - 403 Forbidden)
# Replace {user_token} with a token obtained using the user credentials
GET {{host}}/api/admin
Authorization: Bearer {user_token}

### 4. OAuth2 Server Metadata

### Get Authorization Server Metadata
GET {{host}}/.well-known/oauth-authorization-server

### Get JSON Web Key Set
GET {{host}}/oauth2/jwks

### Expected HTTP Status Codes:
# 200 OK: Successful request
# 401 Unauthorized: Missing or invalid token
# 403 Forbidden: Valid token but insufficient permissions
# 400 Bad Request: Invalid request parameters

### Notes:
# 1. The Authorization header for token requests uses Basic auth with client:secret in base64
#    - "Y2xpZW50OnNlY3JldA==" is base64 encoded "client:secret"
# 2. Replace placeholder tokens:
#    - {access_token} - The access token received from /oauth2/token
#    - {refresh_token} - The refresh token received from /oauth2/token
#    - {user_token} - An access token for a regular user
# 3. The server runs on port 9000 (configured in application.properties)
# 4. Token endpoints:
#    - /oauth2/token - Get access tokens
#    - /oauth2/authorize - Authorization endpoint
#    - /oauth2/jwks - Public key information
